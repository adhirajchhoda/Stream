# Stream Protocol Attestation Service Environment Template
# Copy this file to .env.development for local development
# NEVER commit actual secrets to git

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================

PORT=3001
NODE_ENV=development

# =============================================================================
# SECURITY CONFIGURATION - REPLACE ALL VALUES
# =============================================================================

# CORS origins (use specific domains in production)
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001

# Generate: openssl rand -base64 32
ADMIN_KEY=REPLACE_WITH_SECURE_ADMIN_KEY

# Generate: openssl rand -base64 64
JWT_SECRET=REPLACE_WITH_JWT_SECRET

# Generate: openssl rand -base64 32
ENCRYPTION_KEY=REPLACE_WITH_ENCRYPTION_KEY

# =============================================================================
# RATE LIMITING CONFIGURATION
# =============================================================================

RATE_LIMIT_STANDARD=100
RATE_LIMIT_ATTESTATION=10
RATE_LIMIT_VERIFICATION=50
RATE_LIMIT_REGISTRATION=5

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# Production database URL
DATABASE_URL=postgresql://REPLACE_USER:REPLACE_PASSWORD@localhost:5432/stream_attestations

# Connection pooling
DB_POOL_MIN=2
DB_POOL_MAX=20
DB_POOL_IDLE_TIMEOUT=30000

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================

REDIS_URL=redis://REPLACE_USER:REPLACE_PASSWORD@localhost:6379
REDIS_DB=0
REDIS_TIMEOUT=5000

# =============================================================================
# HSM/VAULT CONFIGURATION (Production Only)
# =============================================================================

# HashiCorp Vault configuration
VAULT_ADDR=https://vault.your-company.com
VAULT_TOKEN=REPLACE_WITH_VAULT_TOKEN
VAULT_NAMESPACE=stream-protocol

# AWS CloudHSM configuration
AWS_CLOUDHSM_CLUSTER_ID=REPLACE_WITH_CLUSTER_ID
AWS_CLOUDHSM_USER=REPLACE_WITH_HSM_USER
AWS_CLOUDHSM_PASSWORD=REPLACE_WITH_HSM_PASSWORD

# Azure Key Vault configuration
AZURE_KEYVAULT_URL=https://REPLACE-keyvault.vault.azure.net/
AZURE_CLIENT_ID=REPLACE_WITH_AZURE_CLIENT_ID
AZURE_CLIENT_SECRET=REPLACE_WITH_AZURE_CLIENT_SECRET
AZURE_TENANT_ID=REPLACE_WITH_AZURE_TENANT_ID

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

LOG_LEVEL=info
LOG_FORMAT=json
LOG_FILE_PATH=./logs/attestation-service.log
LOG_MAX_SIZE=100
LOG_MAX_FILES=5

# =============================================================================
# MONITORING CONFIGURATION
# =============================================================================

ENABLE_METRICS=true
METRICS_PORT=9090
HEALTH_CHECK_TIMEOUT=5000

# =============================================================================
# ZKP CIRCUIT CONFIGURATION
# =============================================================================

ZKP_CIRCUIT_VERSION=v1.0.0
ZKP_MAX_WAGE_AMOUNT=1000000
ZKP_PROVING_KEY_PATH=./circuits/proving_key.zkey
ZKP_VERIFICATION_KEY_PATH=./circuits/verification_key.json

# =============================================================================
# BLOCKCHAIN CONFIGURATION
# =============================================================================

# RPC endpoints
ETHEREUM_RPC_URL=https://mainnet.infura.io/v3/REPLACE_WITH_INFURA_PROJECT_ID
POLYGON_RPC_URL=https://polygon-mainnet.infura.io/v3/REPLACE_WITH_INFURA_PROJECT_ID

# Contract addresses (updated after deployment)
ETHEREUM_VERIFIER_CONTRACT=REPLACE_WITH_CONTRACT_ADDRESS
POLYGON_VERIFIER_CONTRACT=REPLACE_WITH_CONTRACT_ADDRESS

# Gas configuration
GAS_LIMIT=500000
GAS_PRICE=20000000000

# =============================================================================
# EXTERNAL SERVICES - REPLACE ALL KEYS
# =============================================================================

# Email configuration
SMTP_USER=REPLACE_WITH_EMAIL
SMTP_PASSWORD=REPLACE_WITH_APP_PASSWORD
NOTIFICATION_FROM_EMAIL=noreply@your-domain.com
ADMIN_EMAIL=admin@your-domain.com

# Payroll integration
PAYROLL_WEBHOOK_SECRET=REPLACE_WITH_WEBHOOK_SECRET

# Bank API integration
BANK_API_KEY=REPLACE_WITH_BANK_API_KEY
BANK_API_SECRET=REPLACE_WITH_BANK_API_SECRET

# KYC provider
KYC_PROVIDER_API_KEY=REPLACE_WITH_KYC_API_KEY
KYC_PROVIDER_BASE_URL=https://api.kycprovider.com

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================

DEBUG=true
HOT_RELOAD=true
LOG_REQUESTS=true
MOCK_EXTERNAL_SERVICES=true

# =============================================================================
# TESTING CONFIGURATION
# =============================================================================

TEST_DATABASE_URL=postgresql://test_user:test_password@localhost:5432/stream_test
TEST_REDIS_URL=redis://localhost:6379/1
DISABLE_RATE_LIMITING_IN_TESTS=true
TEST_TIMEOUT=30000

# =============================================================================
# SECURITY NOTES
# =============================================================================

# 1. Copy this file to .env.development for local development
# 2. Replace ALL placeholder values with actual secrets
# 3. Use HashiCorp Vault or AWS Secrets Manager for production
# 4. Rotate all secrets quarterly
# 5. Never commit .env.development to git (already in .gitignore)
# 6. Use different secrets for each environment (dev/staging/prod)
# 7. Generate strong passwords: openssl rand -base64 32