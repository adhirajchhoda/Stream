// SPDX-License-Identifier: MIT
pragma solidity ^0.8.24;

/**
 * @title IVerifier
 * @notice Interface for ZK-SNARK verifier contract
 * @dev This interface is compatible with Groth16 verifiers generated by circom/snarkjs
 */
interface IVerifier {
    /**
     * @notice Verifies a zk-SNARK proof
     * @param _pA The A component of the proof
     * @param _pB The B component of the proof
     * @param _pC The C component of the proof
     * @param _pubSignals Public signals/inputs to the circuit
     * @return verified True if the proof is valid, false otherwise
     */
    function verifyProof(
        uint[2] memory _pA,
        uint[2][2] memory _pB,
        uint[2] memory _pC,
        uint[3] memory _pubSignals
    ) external view returns (bool verified);

    /**
     * @notice Alternative verification function with flattened proof array
     * @param proof Flattened proof array [pA_x, pA_y, pB_x0, pB_y0, pB_x1, pB_y1, pC_x, pC_y]
     * @param publicInputs Public inputs [nullifier, amount, employerHash]
     * @return verified True if the proof is valid
     */
    function verifyProofFlat(
        uint256[8] memory proof,
        uint256[3] memory publicInputs
    ) external view returns (bool verified);
}